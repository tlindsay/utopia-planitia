#!/usr/local/bin/zsh
source ~/.env

export VISUAL=nvim
export EDITOR="$VISUAL"

export HOMEBREW_NO_ANALYTICS=1

export BAT_THEME="ansi"

export FZF_DEFAULT_COMMAND="fd --type f --exclude '**/node_modules/*' --exclude '**/.git/*'"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview 'bat --style=numbers --color=always {} | head -500'"
export EMOJI_FZF_PREPEND_EMOJIS=1

export FORGIT_FZF_DEFAULT_OPTS="
--ansi
--border
--cycle
--reverse
"

export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

bindkey '^ ' autosuggest-accept
bindkey '^P' up-line-or-search
bindkey '^N' down-line-or-search
bindkey '^X' clear-screen
bindkey '^B' emoji-fzf-zle

# alias sed="echo 'Did you mean to use sad?\r\n'; sed"

alias l="exa -1 -F -@ --git --group-directories-first --icons"
alias ll="exa -l -F -@ --git --group-directories-first --icons"
alias lll="ll --git -g --header -a"
alias rz="source ~/.zshrc && source ~/.zsh_profile && rehash"
alias root='cd $(npm root)/..'
alias forgit='alias | fzf -q forgit::'
alias update-neovim='asdf uninstall neovim nightly && asdf install neovim nightly'
forgit_checkout_commit='gcco'
alias grom="git reset origin/$(git_main_branch)"

alias tableflip="echo '(╯°□°)╯︵ ┻━┻' && yarn cache clean && rm -rf ./node_modules && yarn --check-files && yarn test --clearCache"
alias vpn="(toggle-vpn && tmux refresh-client -S) &"
alias ff="fzf -m --preview 'bat --style=numbers --color=always {} | head -500'"
alias rw="rg --type web"
alias nowrap="tput rmam"
alias wrap="tput smam"

# Use Raycast.app Spotify extension to "like" current song
alias like="open raycast://extensions/mattisssa/spotify-player/likeCurrentSong"

alias blog="cd ~/Documents/blog"

alias ya="yadm add"
alias yc="yadm commit"
alias yp="yadm push"
alias yst="yadm status"

function cd() {
  builtin cd $@
  l
}

function v() {
  local job=$(jobs | perl -ne 'print $1 if /\[(\d+)\].*vim/')
  if [[ -n $job ]]; then
    tmux send-keys fg Space %$job Enter
    for f in $*; do
      tmux send-keys :e Space `realpath $f` Enter
    done
  else
    vim $*
  fi
}

function toggle_vpn() {
  if [ "$1" != "" ]; then
    host="$1"
  else
    host="Corporate"
  fi

  vpn_status=$(scutil --nc status $host | sed -n 1p)

  if [ $vpn_status != "Connected" ]; then
    vpn_command="start"
  else
    vpn_command="stop"
  fi

  scutil --nc $vpn_command $host
}

function nettest() {
  if [ "$1" != "" ]; then
    host="$1"
  else
    host="8.8.8.8"
  fi
  ping -o "$host" && terminal-notifier -message "The internet is back!"
}

function office() {
  lights="6,8"

  if [ "$1" = "up" ]; then
    if [ "$2" != "" ]; then
      echo "Increasing brightness $2%"
      cmd="+$2%"
    else
      echo "Increasing brightness to 100%"
      cmd="=100%"
    fi
  elif [ "$1" = "down" ]; then
    if [ "$2" != "" ]; then
      echo "Decreasing brightness $2%"
      cmd="-$2%"
    else
      echo "Decreasing brightness 10%"
      cmd="-10%"
    fi
  else
    cmd="$1"
  fi

  hue lights $lights $cmd
}

function randomSha() {
  local n = $1
  for i in `seq $n`; do od -vAn -N2 -tu2 < /dev/urandom | sha1sum; done
}

function onsave() {
   while true
   do
      eval "$1 &!"
      trap "kill $! &> /dev/null; return;" SIGINT SIGTERM
      # inotifywait -e modify -qq $2
      watchman-wait $2
      kill $! &> /dev/null
   done
}


# Use nvim if available
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
fi

# Add custom scripts
if [ -d "$HOME/.bin" ] ; then
  PATH="$PATH:$HOME/.bin"
fi
if [ -d "$HOME/.cargo/bin" ]; then
  PATH="$PATH:$HOME/.cargo/bin"
fi
