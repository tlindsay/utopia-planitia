unbind C-b
set -g prefix C-s

bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# # Smart pane switching with awareness of vim splits
# # See: https://github.com/christoomey/vim-tmux-navigator
# # is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"
# # IF C-h BREAKS, SEE THIS: https://github.com/christoomey/vim-tmux-navigator/issues/61
# bind -n C-h if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   { if-shell -F '#{window_zoomed_flag}' { select-pane -L } {} } { select-pane -L } }
# bind -n C-j if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' { if-shell -F '#{window_zoomed_flag}' { select-pane -D } {} } { select-pane -D } }
# bind -n C-k if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    { if-shell -F '#{window_zoomed_flag}' { select-pane -U } {} } { select-pane -U } }
# bind -n C-l if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  { if-shell -F '#{window_zoomed_flag}' { select-pane -R } {} } { select-pane -R } }
#
# bind -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
# bind -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
# bind -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
# bind -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }
#
# bind -n S-Left resize-pane -L 2
# bind -n S-Right resize-pane -R 2
# bind -n S-Up resize-pane -U 2
# bind -n S-Down resize-pane -D 2
#
# bind -n M-Left resize-pane -L 10
# bind -n M-Right resize-pane -R 10
# bind -n M-Up resize-pane -U 5
# bind -n M-Down resize-pane -D 5

###### The following config comes from https://github.com/mrjones2014/smart-splits.nvim#tmux
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 10'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 10'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind-key -n M-> 'swap-window -t +1; select-window -t +1'
bind-key -n M-< 'swap-window -t -1; select-window -t -1'


###### END SMART-SPLITS CONFIG

set -s default-terminal "tmux-256color"
set-option -g default-terminal "tmux-256color"
set-option -g status-keys "vi"
set-option -sg escape-time 10 # Setting this per Neovim#CheckHealth
set-option -g history-limit 5000

bind - split-window -v -c '#{pane_current_path}'

bind \\ split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind b break-pane -d
set -g base-index 0
set -g renumber-windows on

bind d kill-pane
bind x kill-window
bind = setw synchronize-panes

# Mouse mode
set-option -g mouse on
# https://github.com/tmux/tmux/issues/140
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Trying to fix a few things
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Switch Sessions
bind C-s split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind C-m split-window -v "spt"

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Styling, profiling
# Vertical Separator Char: "▍"
set-option -g status-position top
set -g status-fg black
set -g status-bg brightmagenta
set -g status-left "#[fg=black,bg=blue,bold] #S "
set -g status-left-length 100
set -g status-right-length 140
set -g status-right ""
set -ag status-right "#[bold]#{prefix_highlight}"
set -ag status-right "#[fg=black,bg=green,nobold]#(now-playing)"
set -ag status-right "#[fg=brightmagenta,bg=cyan]▍"
set -ag status-right "#[fg=black,bg=cyan]#(check-vpn && echo "" || echo "") #(ifconfig en0 inet | grep 'inet ' | awk '{print $2}') "
set -ag status-right "#[fg=brightmagenta,bg=cyan]▍"
set -ag status-right "#[fg=black]%a %m/%d %l:%M %p "

setw -g window-status-format "#[fg=black,bg=brightmagenta] #I: #W "
setw -g window-status-current-format "#[fg=cyan,bg=black] #I: #W "

set -g clock-mode-style 12

set -g pane-border-status off
set -g pane-border-status bottom
set -g pane-border-format ""
set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=cyan

set -g monitor-activity on
set -g window-status-activity-style bg=red,fg=white
set -g window-status-bell-style bg=default,fg=red,blink

set -g popup-border-lines rounded

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# PLUGINS!
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'off'
set -g @continuum-save-interval 15
set -g @prefix_highlight_fg 'pink'
set -g @prefix_highlight_bg 'black'

run '~/.tmux/plugins/tpm/tpm'
